//
// Mixins
// --------------------------------------------------


/*******************************************************************************
 * Functions
 ******************************************************************************/

// Pixel to em converter
@function emCalc($pxWidth) {
  @return $pxWidth / $em-base * 1em;
} 
// Pixel to rem converter
@function remCalc($pxWidth) {
  @return $pxWidth / $em-base * 1rem;
}




/*******************************************************************************
 * Mixins
 ******************************************************************************/

// Development mixins

@mixin baseline-grid {
  @include debug-vertical-alignment();
  background-image: -moz-linear-gradient(center bottom , rgba(255, 0, 0, 0.1) 5%, transparent 5%); 
}
@mixin button-rhythm {
  //@include rhythm(0.5,0.5,0.5,0.5,$base-font-size);
  //@include rhythm(0,0.5,0.5,0,$base-font-size);
  @include rhythm-borders(1,0.5,1em,solid);
  @include leader(0.5);
  @include trailer(0.5);
}




// additional bootstrap3 mixins


// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

// Single Corner Border Radius
@mixin border-top-left-radius($radius) {
  -webkit-border-top-left-radius: $radius;
      -moz-border-radius-topleft: $radius;
          border-top-left-radius: $radius;
}
@mixin border-top-right-radius($radius) {
  -webkit-border-top-right-radius: $radius;
      -moz-border-radius-topright: $radius;
          border-top-right-radius: $radius;
}
@mixin border-bottom-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
      -moz-border-radius-bottomright: $radius;
          border-bottom-right-radius: $radius;
}
@mixin border-bottom-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
      -moz-border-radius-bottomleft: $radius;
          border-bottom-left-radius: $radius;
}

// Single Side Border Radius
@mixin border-top-radius($radius) {
  @include border-top-right-radius($radius);
  @include border-top-left-radius($radius);
}
@mixin border-right-radius($radius) {
  @include border-top-right-radius($radius);
  @include border-bottom-right-radius($radius);
}
@mixin border-bottom-radius($radius) {
  @include border-bottom-right-radius($radius);
  @include border-bottom-left-radius($radius);
}
@mixin border-left-radius($radius) {
  @include border-top-left-radius($radius);
  @include border-bottom-left-radius($radius);
}

// Drop shadows
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}



@mixin btn-square() {
  display: inline-block;
  padding: $padding-base-vertical $padding-base-horizontal;
  margin-bottom: 0; // For input.btn
  font-size: $font-size-base;
  font-weight: $btn-font-weight;
  line-height: $line-height-base;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  border: 1px solid transparent;
  /* border-radius: $border-radius-base; */
  white-space: nowrap;
  @include user-select(none);

  &:focus {
    @include tab-focus();
  }

  &:hover,
  &:focus {
    color: $btn-default-color;
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;
    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
    pointer-events: none; // Future-proof disabling of clicks
    @include opacity(.65);
    @include box-shadow(none);
  }
  .glyphicon{
    margin: 0 10px 0 0;
  }  

}
@mixin btn() {
  @include btn-square;
  @include border-radius($border-radius-base);
}


@mixin btn-default {
  @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);
}
@mixin btn-dark {
  @include button-variant($btn-dark-color, $btn-dark-bg, $btn-dark-border);
}
@mixin btn-primary {
  @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
}
// Warning appears as orange
@mixin btn-warning {
  @include button-variant($btn-warning-color, $btn-warning-bg, $btn-warning-border);
}
// Danger and error appear as red
@mixin btn-danger {
  @include button-variant($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}
// Success appears as green
@mixin btn-success {
  @include button-variant($btn-success-color, $btn-success-bg, $btn-success-border);
}
// Info appears as blue-green
@mixin btn-info {
  @include button-variant($btn-info-color, $btn-info-bg, $btn-info-border);
}


@mixin dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: $zindex-dropdown;
  display: none; // none by default, but block on "open" of the menu
  float: left;
  min-width: 160px;
  padding: 5px 0;
  margin: 2px 0 0; // override default ul
  list-style: none;
  background-color: $dropdown-bg;
  border: 1px solid $dropdown-fallback-border; // IE8 fallback
  border: 1px solid $dropdown-border;
  border-radius: $border-radius-base;
  @include box-shadow(0 6px 12px rgba(0,0,0,.175));
  @include background-clip(padding-box);

  // Aligns the dropdown menu to right
  &.pull-right {
    right: 0;
    left: auto;
  }

  // Dividers (basically an hr) within the dropdown
  .divider {
    @include nav-divider($dropdown-divider-bg);
  }

  // Links within the dropdown menu
  > li > a {
    display: block;
    padding: 3px 20px;
    clear: both;
    font-weight: normal;
    line-height: $line-height-base;
    color: $dropdown-link-color;
    white-space: nowrap; // prevent links from randomly breaking onto new lines
  }
}


@mixin alert {
  padding: 10px 35px 10px 15px;
  margin-bottom: $line-height-computed;
  color: $alert-text;
  background-color: $alert-bg;
  border: 1px solid $alert-border;
  @include border-radius($alert-border-radius);

  // Headings for larger alerts
  h4 {
    margin-top: 0;
    // Specified for the h4 to prevent conflicts of changing $headingsColor
    color: inherit;
  }
  // Match the hr to the border of the alert
  hr {
    border-top-color: darken($alert-border, 5%);
  }
  // Provide class for links that match alerts
  .alert-link {
    font-weight: 500;
    color: darken($alert-text, 10%);
  }

  // Adjust close link position
  .close {
    position: relative;
    top: -2px;
    right: -21px;
    color: inherit;
  }
}



@mixin nav {
  margin-left: 0;
  margin-bottom: 0;
  padding-left: 0; // Override default ul/ol
  list-style: none;
  @include clearfix();

  > li {
    position: relative;
    display: block;

    > a {
      position: relative;
      display: block;
      padding: 10px 15px;
      &:hover,
      &:focus {
        text-decoration: none;
        background-color: $gray-lighter;
      }
    }

    // Disabled state sets text to gray and nukes hover/tab effects
    &.disabled > a {
      color: $gray-light;
    }
    &.disabled > a:hover,
    &.disabled > a:focus {
      color: $gray-light;
      text-decoration: none;
      background-color: transparent;
      cursor: default;
    }

    // Space the headers out when they follow another list item (link)
    + .nav-header {
      margin-top: 9px;
    }
  }

  // Open dropdowns
  &.open > a,
  &.open > a:hover,
  &.open > a:focus {
    color: #fff;
    background-color: $link-color;
    border-color: $link-color;
    .caret {
      border-top-color: #fff;
      border-bottom-color: #fff;
    }
  }

  // Redeclare pull classes because of specifity
  // Todo: consider making these utilities !important to avoid this bullshit
  > .pull-right {
    float: right;
  }

  // Dividers (basically an hr) within the dropdown
  .nav-divider {
    @include nav-divider();
  }
  
}

@mixin nav-pills {
  > li {
    float: left;

    // Links rendered as pills
    > a {
        @include border-radius($border-radius-base);
    }
    + li {
      > a {
        margin-left: 2px;
      }
    }

    // Active state
    &.ui-tabs-active > a,
    &.ui-tabs-active > a:hover,
    &.ui-tabs-active > a:focus,
    &.active > a,
    &.active > a:hover,
    &.active > a:focus {
      color: #fff;
      background-color: $component-active-bg;
    }    
  }
}

// Generate form validation states
@mixin form-field-validation($text-color: #555, $border-color: #ccc, $background-color: #f5f5f5) {
  // Color the label text
  .control-label,
  .label {
    color: $text-color;
    background-color: $background-color;
    .form-required {
      color: $text-color;      
    }
  }
  // Set the border and box shadow on specific inputs to match
  .error,
  .input-with-feedback {
    padding-right: 32px; // to account for the feedback icon
    border-color: $border-color;
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work
    &:focus {
      border-color: darken($border-color, 10%);
      $shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($border-color, 20%);
      @include box-shadow($shadow);
    }
  }
}



/*
   Animation example, for spinners
*/
.animate-spin {
  -moz-animation: spin 2s infinite linear;
  -o-animation: spin 2s infinite linear;
  -webkit-animation: spin 2s infinite linear;
  animation: spin 2s infinite linear;
  display: inline-block;
}
@-moz-keyframes spin {
  0% {
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -moz-transform: rotate(359deg);
    -o-transform: rotate(359deg);
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
@-webkit-keyframes spin {
  0% {
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -moz-transform: rotate(359deg);
    -o-transform: rotate(359deg);
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
@-o-keyframes spin {
  0% {
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -moz-transform: rotate(359deg);
    -o-transform: rotate(359deg);
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
@-ms-keyframes spin {
  0% {
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -moz-transform: rotate(359deg);
    -o-transform: rotate(359deg);
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
@keyframes spin {
  0% {
    -moz-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -moz-transform: rotate(359deg);
    -o-transform: rotate(359deg);
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}

/*******************************************************************************
 * Helper classes
 ******************************************************************************/





